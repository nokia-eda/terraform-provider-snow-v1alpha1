{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "OverlayState": {
        "properties": {
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLink"
            },
            "type": "object"
          },
          "nodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNode"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceTopology": {
        "properties": {
          "topology": {
            "$ref": "#/components/schemas/OverlayState"
          },
          "topologyMetadata": {
            "$ref": "#/components/schemas/Topology"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoAttrMetadata": {
        "properties": {
          "type": {
            "type": "string"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoElemMetadata": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoAttrMetadata"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "subtitle": {
            "type": "string"
          },
          "subtitle_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoLinkEndpoint": {
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "node_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoNodeGrouping": {
        "properties": {
          "group": {
            "type": "string"
          },
          "tier": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpoint": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayEndpointState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpointState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayLink": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "endpoint_a": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_a_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "endpoint_b": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_b_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLinkState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayLinkState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayNode": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "cr_name": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoNodeGrouping"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNodeState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayNodeState": {
        "properties": {
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoSchema": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Topology": {
        "properties": {
          "endpoints": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "group": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "links": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "com.nokia.eda.snow.v1alpha1.ClusterIncident": {
        "description": "ClusterIncident is the Schema for the clusterincidents API",
        "properties": {
          "apiVersion": {
            "default": "snow.eda.nokia.com/v1alpha1",
            "pattern": "^snow\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to snow.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ClusterIncident",
            "pattern": "^ClusterIncident$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ClusterIncident",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncident_metadata"
          },
          "spec": {
            "description": "ClusterIncidentSpec defines the desired state of ClusterIncident",
            "properties": {
              "description": {
                "description": "A short description of the Incident generator",
                "title": "Alarms",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 50
                }
              },
              "enabled": {
                "description": "Indicates if the incident generator is enabled",
                "title": "Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "instance": {
                "description": "Instances associated with this incident generator",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "title": "Instance",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "snow.eda.nokia.com",
                      "resource": "clusterinstances",
                      "type": "gvr",
                      "version": "v1alpha1"
                    }
                  ],
                  "ui-order-priority": 1500
                }
              },
              "sources": {
                "description": "Sources for incident generation",
                "properties": {
                  "query": {
                    "description": "Include a query source in this incident generator",
                    "properties": {
                      "assignedTo": {
                        "description": "The individual assigned to resolve the incident (references the User table).",
                        "title": "Assigned To",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 800
                        }
                      },
                      "assignmentGroup": {
                        "description": "The group responsible for addressing the incident (references the Group table).",
                        "title": "Assignment Group",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 850
                        }
                      },
                      "autoResolve": {
                        "description": "If true this app will automatically resolve the incident when the object is deleted.",
                        "title": "Auto Resolve",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 600
                        }
                      },
                      "callerId": {
                        "description": "The user who reported the incident (references the User table).",
                        "title": "Caller ID",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 750
                        }
                      },
                      "category": {
                        "description": "General category of the incident (e.g., Software, Hardware, Network).",
                        "title": "Category",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1100
                        }
                      },
                      "closeCode": {
                        "description": "A code indicating how the incident was resolved (e.g., Solved (Workaround), Solved (Permanently)).",
                        "title": "Close Code",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1200
                        }
                      },
                      "closeNotes": {
                        "description": "Notes on how the incident was resolved.",
                        "title": "Close Notes",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1250
                        }
                      },
                      "cmdbci": {
                        "description": "The Configuration Item (CI) associated with the incident,\nlinking it to an asset or service in the CMDB (Configuration Management Database).",
                        "title": "CMDBCI",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1350
                        }
                      },
                      "customFields": {
                        "description": "List of custom fields to add to the incident",
                        "items": {
                          "properties": {
                            "name": {
                              "description": "Custom field name",
                              "type": "string"
                            },
                            "value": {
                              "description": "Custom field value, a Go template",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "title": "Custom Fields",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1450
                        }
                      },
                      "description": {
                        "description": "A detailed description of the issue.",
                        "title": "Description",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 700
                        }
                      },
                      "fields": {
                        "description": "Fields to include in the subscribe results, which can then be used in the template,\ne.g. '.namespace.node.name' or '.namespace.node.srl.interface.name\"'.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Fields",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 550
                        }
                      },
                      "impact": {
                        "description": "Impact level on the organization, usually from 1 (highest) to 3 (lowest).",
                        "title": "Impact",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1050
                        }
                      },
                      "location": {
                        "description": "Physical or logical location related to the incident.",
                        "title": "Location",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1400
                        }
                      },
                      "priority": {
                        "description": "Numeric priority of the incident, usually from 1 (highest) to 5 (lowest).",
                        "title": "Priority",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 950
                        }
                      },
                      "resolutionCode": {
                        "description": "Indicates the type of resolution applied.",
                        "title": "Resolution Code",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1300
                        }
                      },
                      "shortDescription": {
                        "description": "A Go template used to generate a brief summary of the incident\nwhen raising it in service now.\nThe template can use the fields from the subscription results.\ne.g. 'Interface {{.node.srl.interface.name}} is down on node {{.node.name}}'.",
                        "title": "Short Description",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 650
                        }
                      },
                      "state": {
                        "description": "The current status of the incident, typically represented by codes:\n  1: New\n  2: In Progress\n  3: On Hold\n  4: Resolved\n  6: Closed",
                        "title": "State",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 900
                        }
                      },
                      "subCategory": {
                        "description": "More specific subcategory within the main category.",
                        "title": "Sub Category",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1150
                        }
                      },
                      "table": {
                        "description": "EDB table to subscribe to. e.g. '.namespace.node.srl.interface'",
                        "title": "Table",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 450
                        }
                      },
                      "urgency": {
                        "description": "Urgency level, typically from 1 (highest) to 5 (lowest).",
                        "title": "Urgency",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1000
                        }
                      },
                      "where": {
                        "description": "A where clause to use for the subscribe request, e.g: 'oper-state = down'. You can omit enclosing parentheses.",
                        "title": "Where",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 500
                        }
                      }
                    },
                    "title": "Query",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 400
                    }
                  }
                },
                "title": "Sources",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 150
                }
              }
            },
            "required": [
              "sources"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ClusterIncidentStatus defines the observed state of ClusterIncident",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.ClusterIncidentList": {
        "description": "ClusterIncidentList is a list of clusterincidents",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncident"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.ClusterIncident_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.ClusterIncident_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncident_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.snow.v1alpha1.ClusterIncident_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "snow.eda.nokia.com",
                  "kind": "ClusterIncident",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.snow.v1alpha1.ClusterInstance": {
        "description": "ClusterInstance is the Schema for the clusterinstances API",
        "properties": {
          "apiVersion": {
            "default": "snow.eda.nokia.com/v1alpha1",
            "pattern": "^snow\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to snow.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ClusterInstance",
            "pattern": "^ClusterInstance$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ClusterInstance",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstance_metadata"
          },
          "spec": {
            "description": "ClusterInstanceSpec defines the desired state of ClusterInstance",
            "properties": {
              "clientCredentials": {
                "description": "Reference to a Kubernetes secret containing client credentials\nSecret. It must includes the keys: `client_id`, `client_secret`,\n`username` and `password`.",
                "title": "Client Credentials",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 150
                }
              },
              "retryCount": {
                "description": "Number of retries for API requests. Defaults to 0 i.e no retries.",
                "title": "Retry Count",
                "type": "integer",
                "x-eda-nokia-com": {
                  "ui-order-priority": 250
                }
              },
              "retryInterval": {
                "description": "Interval between retries in case of a failed request",
                "title": "Retry Interval",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 250
                }
              },
              "timeout": {
                "default": "10s",
                "description": "Timeout for API requests to ServiceNow",
                "title": "Timeout",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200
                }
              },
              "url": {
                "description": "The URL of the ServiceNow instance",
                "title": "URL",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 50
                }
              },
              "version": {
                "description": "API version to use when connecting to ServiceNow",
                "title": "Version",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              }
            },
            "required": [
              "clientCredentials",
              "url"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "InstanceStatus defines the observed state of Instance",
            "properties": {
              "errorReason": {
                "description": "Provides an error reason if the instance is unreachable",
                "title": "Error Reason",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200
                }
              },
              "lastChecked": {
                "description": "Last checked time for connectivity status",
                "format": "date-time",
                "title": "Last Checked",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 300
                }
              },
              "reachable": {
                "description": "Indicates if the ServiceNow instance is reachable",
                "title": "Reachable",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.ClusterInstanceList": {
        "description": "ClusterInstanceList is a list of clusterinstances",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstance"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.ClusterInstance_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.ClusterInstance_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstance_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.snow.v1alpha1.ClusterInstance_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "snow.eda.nokia.com",
                  "kind": "ClusterInstance",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.snow.v1alpha1.Incident": {
        "description": "Incident is the Schema for the incidents API",
        "properties": {
          "apiVersion": {
            "default": "snow.eda.nokia.com/v1alpha1",
            "pattern": "^snow\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to snow.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Incident",
            "pattern": "^Incident$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Incident",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Incident_metadata"
          },
          "spec": {
            "description": "IncidentSpec defines the desired state of Incident",
            "properties": {
              "description": {
                "description": "A short description of the Incident generator",
                "title": "Alarms",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 50
                }
              },
              "enabled": {
                "description": "Indicates if the incident generator is enabled",
                "title": "Enabled",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "instance": {
                "description": "Instances associated with this incident generator",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "title": "Instance",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "snow.eda.nokia.com",
                      "resource": "instances",
                      "type": "gvr",
                      "version": "v1alpha1"
                    }
                  ],
                  "ui-order-priority": 1500
                }
              },
              "sources": {
                "description": "Sources for incident generation",
                "properties": {
                  "query": {
                    "description": "Include a query source in this incident generator",
                    "properties": {
                      "assignedTo": {
                        "description": "The individual assigned to resolve the incident (references the User table).",
                        "title": "Assigned To",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 800
                        }
                      },
                      "assignmentGroup": {
                        "description": "The group responsible for addressing the incident (references the Group table).",
                        "title": "Assignment Group",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 850
                        }
                      },
                      "autoResolve": {
                        "description": "If true this app will automatically resolve the incident when the object is deleted.",
                        "title": "Auto Resolve",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 600
                        }
                      },
                      "callerId": {
                        "description": "The user who reported the incident (references the User table).",
                        "title": "Caller ID",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 750
                        }
                      },
                      "category": {
                        "description": "General category of the incident (e.g., Software, Hardware, Network).",
                        "title": "Category",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1100
                        }
                      },
                      "closeCode": {
                        "description": "A code indicating how the incident was resolved (e.g., Solved (Workaround), Solved (Permanently)).",
                        "title": "Close Code",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1200
                        }
                      },
                      "closeNotes": {
                        "description": "Notes on how the incident was resolved.",
                        "title": "Close Notes",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1250
                        }
                      },
                      "cmdbci": {
                        "description": "The Configuration Item (CI) associated with the incident,\nlinking it to an asset or service in the CMDB (Configuration Management Database).",
                        "title": "CMDBCI",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1350
                        }
                      },
                      "customFields": {
                        "description": "List of custom fields to add to the incident",
                        "items": {
                          "properties": {
                            "name": {
                              "description": "Custom field name",
                              "type": "string"
                            },
                            "value": {
                              "description": "Custom field value, a Go template",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "title": "Custom Fields",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1450
                        }
                      },
                      "description": {
                        "description": "A detailed description of the issue.",
                        "title": "Description",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 700
                        }
                      },
                      "fields": {
                        "description": "Fields to include in the subscribe results, which can then be used in the template,\ne.g. '.namespace.node.name' or '.namespace.node.srl.interface.name\"'.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Fields",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 550
                        }
                      },
                      "impact": {
                        "description": "Impact level on the organization, usually from 1 (highest) to 3 (lowest).",
                        "title": "Impact",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1050
                        }
                      },
                      "location": {
                        "description": "Physical or logical location related to the incident.",
                        "title": "Location",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1400
                        }
                      },
                      "priority": {
                        "description": "Numeric priority of the incident, usually from 1 (highest) to 5 (lowest).",
                        "title": "Priority",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 950
                        }
                      },
                      "resolutionCode": {
                        "description": "Indicates the type of resolution applied.",
                        "title": "Resolution Code",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1300
                        }
                      },
                      "shortDescription": {
                        "description": "A Go template used to generate a brief summary of the incident\nwhen raising it in service now.\nThe template can use the fields from the subscription results.\ne.g. 'Interface {{.node.srl.interface.name}} is down on node {{.node.name}}'.",
                        "title": "Short Description",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 650
                        }
                      },
                      "state": {
                        "description": "The current status of the incident, typically represented by codes:\n  1: New\n  2: In Progress\n  3: On Hold\n  4: Resolved\n  6: Closed",
                        "title": "State",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 900
                        }
                      },
                      "subCategory": {
                        "description": "More specific subcategory within the main category.",
                        "title": "Sub Category",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1150
                        }
                      },
                      "table": {
                        "description": "EDB table to subscribe to. e.g. '.namespace.node.srl.interface'",
                        "title": "Table",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 450
                        }
                      },
                      "urgency": {
                        "description": "Urgency level, typically from 1 (highest) to 5 (lowest).",
                        "title": "Urgency",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 1000
                        }
                      },
                      "where": {
                        "description": "A where clause to use for the subscribe request, e.g: 'oper-state = down'. You can omit enclosing parentheses.",
                        "title": "Where",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 500
                        }
                      }
                    },
                    "title": "Query",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 400
                    }
                  }
                },
                "title": "Sources",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 150
                }
              }
            },
            "required": [
              "sources"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "IncidentStatus defines the observed state of Incident",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.IncidentList": {
        "description": "IncidentList is a list of incidents",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Incident"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.Incident_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.Incident_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Incident_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.snow.v1alpha1.Incident_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "snow.eda.nokia.com",
                  "kind": "Incident",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.snow.v1alpha1.Instance": {
        "description": "Instance is the Schema for the instances API",
        "properties": {
          "apiVersion": {
            "default": "snow.eda.nokia.com/v1alpha1",
            "pattern": "^snow\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to snow.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Instance",
            "pattern": "^Instance$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Instance",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Instance_metadata"
          },
          "spec": {
            "description": "InstanceSpec defines the desired state of Instance",
            "properties": {
              "clientCredentials": {
                "description": "Reference to a Kubernetes secret containing client credentials\nSecret. It must includes the keys: `client_id`, `client_secret`,\n`username` and `password`.",
                "title": "Client Credentials",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 150
                }
              },
              "retryCount": {
                "description": "Number of retries for API requests. Defaults to 0 i.e no retries.",
                "title": "Retry Count",
                "type": "integer",
                "x-eda-nokia-com": {
                  "ui-order-priority": 250
                }
              },
              "retryInterval": {
                "description": "Interval between retries in case of a failed request",
                "title": "Retry Interval",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 250
                }
              },
              "timeout": {
                "default": "10s",
                "description": "Timeout for API requests to ServiceNow",
                "title": "Timeout",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200
                }
              },
              "url": {
                "description": "The URL of the ServiceNow instance",
                "title": "URL",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 50
                }
              },
              "version": {
                "description": "API version to use when connecting to ServiceNow",
                "title": "Version",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              }
            },
            "required": [
              "clientCredentials",
              "url"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "InstanceStatus defines the observed state of Instance",
            "properties": {
              "errorReason": {
                "description": "Provides an error reason if the instance is unreachable",
                "title": "Error Reason",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200
                }
              },
              "lastChecked": {
                "description": "Last checked time for connectivity status",
                "format": "date-time",
                "title": "Last Checked",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 300
                }
              },
              "reachable": {
                "description": "Indicates if the ServiceNow instance is reachable",
                "title": "Reachable",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.InstanceList": {
        "description": "InstanceList is a list of instances",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Instance"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.Instance_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.snow.v1alpha1.Instance_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Instance_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.snow.v1alpha1.Instance_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "snow.eda.nokia.com",
                  "kind": "Instance",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "ServiceNow Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/snow.eda.nokia.com": {
      "get": {
        "description": "list versions available from snow.eda.nokia.com",
        "operationId": "getVersionSnowEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1": {
      "get": {
        "description": "list resources available from snow.eda.nokia.com/v1alpha1",
        "operationId": "getResourcesSnowEdaNokiaComV1alpha1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for snow.eda.nokia.com v1alpha1",
        "operationId": "uiSnowEdaNokiaComV1alpha1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/clusterincidents": {
      "delete": {
        "description": "Delete all instances of ClusterIncident.  If ClusterIncident is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced ClusterIncident, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllSnowEdaNokiaComV1alpha1Clusterincidents",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncidentList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listSnowEdaNokiaComV1alpha1Clusterincidents",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncidentList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list clusterincidents",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced ClusterIncident",
        "operationId": "createSnowEdaNokiaComV1alpha1Clusterincidents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncident"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncident"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/clusterincidents/_deleted": {
      "get": {
        "operationId": "getDeletedSnowEdaNokiaComV1alpha1Clusterincidents",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncident_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ClusterIncident that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/clusterincidents/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced ClusterIncident",
        "operationId": "deleteSnowEdaNokiaComV1alpha1Clusterincidents",
        "parameters": [
          {
            "description": "name of the ClusterIncident to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced ClusterIncident.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readSnowEdaNokiaComV1alpha1Clusterincidents",
        "parameters": [
          {
            "description": "name of the ClusterIncident",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncident"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced ClusterIncident",
        "operationId": "patchSnowEdaNokiaComV1alpha1Clusterincidents",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncident"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced ClusterIncident",
        "operationId": "replaceSnowEdaNokiaComV1alpha1Clusterincidents",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncident"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterIncident"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/clusterincidents/{name}/_revs": {
      "get": {
        "operationId": "getHistorySnowEdaNokiaComV1alpha1Clusterincidents",
        "parameters": [
          {
            "description": "name of the ClusterIncident to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced ClusterIncident.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/clusterincidents/{name}/_topology": {
      "get": {
        "operationId": "getTopologySnowEdaNokiaComV1alpha1Clusterincidents",
        "parameters": [
          {
            "description": "name of the ClusterIncident to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced ClusterIncident.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/clusterinstances": {
      "delete": {
        "description": "Delete all instances of ClusterInstance.  If ClusterInstance is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced ClusterInstance, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllSnowEdaNokiaComV1alpha1Clusterinstances",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstanceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listSnowEdaNokiaComV1alpha1Clusterinstances",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstanceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list clusterinstances",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced ClusterInstance",
        "operationId": "createSnowEdaNokiaComV1alpha1Clusterinstances",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstance"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/clusterinstances/_deleted": {
      "get": {
        "operationId": "getDeletedSnowEdaNokiaComV1alpha1Clusterinstances",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstance_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ClusterInstance that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/clusterinstances/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced ClusterInstance",
        "operationId": "deleteSnowEdaNokiaComV1alpha1Clusterinstances",
        "parameters": [
          {
            "description": "name of the ClusterInstance to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced ClusterInstance.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readSnowEdaNokiaComV1alpha1Clusterinstances",
        "parameters": [
          {
            "description": "name of the ClusterInstance",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstance"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced ClusterInstance",
        "operationId": "patchSnowEdaNokiaComV1alpha1Clusterinstances",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstance"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced ClusterInstance",
        "operationId": "replaceSnowEdaNokiaComV1alpha1Clusterinstances",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.ClusterInstance"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/clusterinstances/{name}/_revs": {
      "get": {
        "operationId": "getHistorySnowEdaNokiaComV1alpha1Clusterinstances",
        "parameters": [
          {
            "description": "name of the ClusterInstance to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced ClusterInstance.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/clusterinstances/{name}/_topology": {
      "get": {
        "operationId": "getTopologySnowEdaNokiaComV1alpha1Clusterinstances",
        "parameters": [
          {
            "description": "name of the ClusterInstance to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced ClusterInstance.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/incidents": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listSnowEdaNokiaComV1alpha1Incidents",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.IncidentList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list incidents",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/instances": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listSnowEdaNokiaComV1alpha1Instances",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.InstanceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list instances",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/namespaces/{namespace}/incidents": {
      "delete": {
        "operationId": "deleteAllSnowEdaNokiaComV1alpha1NamespaceIncidents",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.IncidentList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Incident in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listSnowEdaNokiaComV1alpha1NamespaceIncidents",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.IncidentList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list incidents in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Incident",
        "operationId": "createSnowEdaNokiaComV1alpha1NamespaceIncidents",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Incident"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Incident"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/namespaces/{namespace}/incidents/_deleted": {
      "get": {
        "operationId": "getDeletedSnowEdaNokiaComV1alpha1NamespaceIncidents",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Incident_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Incident that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/namespaces/{namespace}/incidents/{name}": {
      "delete": {
        "description": "delete the specified Incident",
        "operationId": "deleteSnowEdaNokiaComV1alpha1NamespaceIncidents",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Incident to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Incident.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readSnowEdaNokiaComV1alpha1NamespaceIncidents",
        "parameters": [
          {
            "description": "name of the Incident",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Incident"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Incident",
        "operationId": "patchSnowEdaNokiaComV1alpha1NamespaceIncidents",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Incident"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Incident",
        "operationId": "replaceSnowEdaNokiaComV1alpha1NamespaceIncidents",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Incident"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Incident"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/namespaces/{namespace}/incidents/{name}/_revs": {
      "get": {
        "operationId": "getHistorySnowEdaNokiaComV1alpha1NamespaceIncidents",
        "parameters": [
          {
            "description": "name of the Incident to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Incident.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/namespaces/{namespace}/incidents/{name}/_topology": {
      "get": {
        "operationId": "getTopologySnowEdaNokiaComV1alpha1NamespaceIncidents",
        "parameters": [
          {
            "description": "name of the Incident to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Incident.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/namespaces/{namespace}/instances": {
      "delete": {
        "operationId": "deleteAllSnowEdaNokiaComV1alpha1NamespaceInstances",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.InstanceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Instance in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listSnowEdaNokiaComV1alpha1NamespaceInstances",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.InstanceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list instances in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Instance",
        "operationId": "createSnowEdaNokiaComV1alpha1NamespaceInstances",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Instance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Instance"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/namespaces/{namespace}/instances/_deleted": {
      "get": {
        "operationId": "getDeletedSnowEdaNokiaComV1alpha1NamespaceInstances",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Instance_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Instance that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/namespaces/{namespace}/instances/{name}": {
      "delete": {
        "description": "delete the specified Instance",
        "operationId": "deleteSnowEdaNokiaComV1alpha1NamespaceInstances",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Instance to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Instance.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readSnowEdaNokiaComV1alpha1NamespaceInstances",
        "parameters": [
          {
            "description": "name of the Instance",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Instance"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Instance",
        "operationId": "patchSnowEdaNokiaComV1alpha1NamespaceInstances",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Instance"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Instance",
        "operationId": "replaceSnowEdaNokiaComV1alpha1NamespaceInstances",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Instance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.snow.v1alpha1.Instance"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/namespaces/{namespace}/instances/{name}/_revs": {
      "get": {
        "operationId": "getHistorySnowEdaNokiaComV1alpha1NamespaceInstances",
        "parameters": [
          {
            "description": "name of the Instance to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Instance.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/snow.eda.nokia.com/v1alpha1/namespaces/{namespace}/instances/{name}/_topology": {
      "get": {
        "operationId": "getTopologySnowEdaNokiaComV1alpha1NamespaceInstances",
        "parameters": [
          {
            "description": "name of the Instance to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Instance.",
        "tags": [
          "apps"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}